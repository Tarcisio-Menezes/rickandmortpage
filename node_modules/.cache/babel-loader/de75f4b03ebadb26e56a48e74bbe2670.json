{"ast":null,"code":"var _jsxFileName = \"/home/tarcisio/pages/rickandmort/src/components/Inputs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Form, FloatingLabel } from 'react-bootstrap';\nimport MainContext from '../context/MainContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Inputs() {\n  _s();\n\n  const {\n    setNewPersons,\n    setSearchName,\n    setSearchStatus,\n    searchStatus\n  } = useContext(MainContext);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Explorar aleatoriamente por p\\xE1gina:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"number\",\n      placeholder: \"N\\xFAmero da p\\xE1gina\",\n      onChange: e => setNewPersons(e.target.value),\n      min: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Pesquisa combinada\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Pesquise por nome e diga se o personagem est\\xE1 vivo ou morto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Nome do personagem\",\n        onChange: e => setSearchName(e.target.value.toLowerCase())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(FloatingLabel, {\n        controlId: \"floatingSelect\",\n        children: /*#__PURE__*/_jsxDEV(Form.Select, {\n          \"aria-label\": \"alive, dead or unknow\",\n          onChange: e => setSearchStatus(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"alive\",\n            children: \" Alive \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"dead\",\n            children: \" Dead \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"unknow\",\n            children: \" Unknow \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: searchStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Inputs, \"uBbRAXOIzS/oAGPWD8qAx/FY5dk=\");\n\n_c = Inputs;\nexport default Inputs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Inputs\");","map":{"version":3,"sources":["/home/tarcisio/pages/rickandmort/src/components/Inputs.js"],"names":["React","useContext","Form","FloatingLabel","MainContext","Inputs","setNewPersons","setSearchName","setSearchStatus","searchStatus","e","target","value","toLowerCase"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAT,EAAeC,aAAf,QAAoC,iBAApC;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,aAAjB;AAAgCC,IAAAA,eAAhC;AAAiDC,IAAAA;AAAjD,MAAkER,UAAU,CAACG,WAAD,CAAlF;AACA,sBACE;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,WAAW,EAAC,wBAFd;AAGE,MAAA,QAAQ,EAAIM,CAAD,IAAOJ,aAAa,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAHjC;AAIE,MAAA,GAAG,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AAAS,MAAA,SAAS,EAAC,QAAnB;AAAA,8BACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADL,eAEK,QAAC,IAAD,CAAM,OAAN;AACC,QAAA,IAAI,EAAC,MADN;AAEC,QAAA,WAAW,EAAC,oBAFb;AAGC,QAAA,QAAQ,EAAIF,CAAD,IAAOH,aAAa,CAAEG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAiBC,WAAjB,EAAD;AAHhC;AAAA;AAAA;AAAA;AAAA,cAFL,eAOI,QAAC,aAAD;AAAe,QAAA,SAAS,EAAC,gBAAzB;AAAA,+BACE,QAAC,IAAD,CAAM,MAAN;AACE,wBAAW,uBADb;AAEE,UAAA,QAAQ,EAAIH,CAAD,IAAOF,eAAe,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAFnC;AAAA,kCAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJA,eAKA;AAAQ,YAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA,eAMA;AAAQ,YAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANA,eAOA;AAAQ,YAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPJ,eAkBE;AAAA,kBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GAlCQJ,M;;KAAAA,M;AAoCT,eAAeA,MAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Form, FloatingLabel } from 'react-bootstrap';\nimport MainContext from '../context/MainContext';\n\nfunction Inputs() {\n  const { setNewPersons, setSearchName, setSearchStatus, searchStatus } = useContext(MainContext);\n  return (\n    <section>\n        <p> Explorar aleatoriamente por página:</p>\n        <Form.Control\n          type=\"number\"\n          placeholder=\"Número da página\" \n          onChange={ (e) => setNewPersons(e.target.value) }\n          min=\"1\"\n        />\n        <h3>Pesquisa combinada</h3>\n        <section className=\"inputs\">\n             <p> Pesquise por nome e diga se o personagem está vivo ou morto</p>\n             <Form.Control\n              type=\"text\"\n              placeholder=\"Nome do personagem\"\n              onChange={ (e) => setSearchName((e.target.value).toLowerCase()) }\n             />\n            <FloatingLabel controlId=\"floatingSelect\">\n              <Form.Select\n                aria-label=\"alive, dead or unknow\"\n                onChange={ (e) => setSearchStatus(e.target.value) }\n              >\n              <option>Status</option>\n              <option value=\"alive\"> Alive </option>\n              <option value=\"dead\"> Dead </option>\n              <option value=\"unknow\"> Unknow </option>\n            </Form.Select>\n          </FloatingLabel>\n          <p>{ searchStatus }</p>\n        </section>\n    </section>\n  );\n}\n\nexport default Inputs;\n"]},"metadata":{},"sourceType":"module"}