{"ast":null,"code":"import _regeneratorRuntime from\"/home/tarcisio/pages/rickandmort/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/tarcisio/pages/rickandmort/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/tarcisio/pages/rickandmort/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import Nav from'../components/Nav';import'../css/Episode.css';import{getEpisodes}from'../services/SearchAPI';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Episode(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),episodes=_useState2[0],setEpisodes=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];useEffect(function(){var getPersons=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$getEpisodes,results;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getEpisodes();case 2:_yield$getEpisodes=_context.sent;results=_yield$getEpisodes.results;setEpisodes(results);case 5:case\"end\":return _context.stop();}}},_callee);}));return function getPersons(){return _ref.apply(this,arguments);};}();getPersons()&&setLoading(false);},[]);// console.log(episodes)\nfunction listConditinal(){if(loading||!episodes){return/*#__PURE__*/_jsx(\"p\",{children:\"Carregando...\"});}return/*#__PURE__*/_jsx(\"ul\",{children:episodes.map(function(item,index){return/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"p\",{children:item.name}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Date: \",item.air_date,\" \"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Epis\\xF3dio: \",item.episode]})]},index);})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"episodes\",children:[/*#__PURE__*/_jsx(Nav,{}),/*#__PURE__*/_jsx(\"h1\",{children:\"Epis\\xF3dios\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Em constru\\xE7\\xE3o...\"}),listConditinal()]});}export default Episode;","map":{"version":3,"sources":["/home/tarcisio/pages/rickandmort/src/pages/Episode.js"],"names":["React","useEffect","useState","Nav","getEpisodes","Episode","episodes","setEpisodes","loading","setLoading","getPersons","results","listConditinal","map","item","index","name","air_date","episode"],"mappings":"sVAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,GAAP,KAAgB,mBAAhB,CACA,MAAO,oBAAP,CACA,OAASC,WAAT,KAA4B,uBAA5B,C,wFAEA,QAASC,CAAAA,OAAT,EAAmB,CAEjB,cAAgCH,QAAQ,CAAC,EAAD,CAAxC,wCAAOI,QAAP,eAAiBC,WAAjB,eACA,eAA8BL,QAAQ,CAAC,IAAD,CAAtC,yCAAOM,OAAP,eAAgBC,UAAhB,eAEAR,SAAS,CAAC,UAAM,CACd,GAAMS,CAAAA,UAAU,0FAAG,wLACQN,CAAAA,WAAW,EADnB,yCACVO,OADU,oBACVA,OADU,CAElBJ,WAAW,CAACI,OAAD,CAAX,CAFkB,sDAAH,kBAAVD,CAAAA,UAAU,0CAAhB,CAKAA,UAAU,IAAMD,UAAU,CAAC,KAAD,CAA1B,CACD,CAPQ,CAON,EAPM,CAAT,CASA;AAEA,QAASG,CAAAA,cAAT,EAA0B,CACxB,GAAGJ,OAAO,EAAI,CAACF,QAAf,CAAyB,CACvB,mBAAO,oCAAP,CACD,CAAC,mBACA,oBAEEA,QAAQ,CAACO,GAAT,CAAa,SAACC,IAAD,CAAOC,KAAP,qBAAiB,mCAC5B,mBAAID,IAAI,CAACE,IAAT,EAD4B,cAE5B,8BAAUF,IAAI,CAACG,QAAf,OAF4B,cAG5B,qCAAcH,IAAI,CAACI,OAAnB,GAH4B,GAASH,KAAT,CAAjB,EAAb,CAFF,EADA,CAWH,CAED,mBACE,aAAK,SAAS,CAAC,UAAf,wBACE,KAAC,GAAD,IADF,cAEE,oCAFF,cAGE,6CAHF,CAIIH,cAAc,EAJlB,GADF,CAQD,CAED,cAAeP,CAAAA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Nav from '../components/Nav';\nimport '../css/Episode.css';\nimport { getEpisodes } from '../services/SearchAPI';\n\nfunction Episode() {\n\n  const [episodes, setEpisodes] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getPersons = async () => {\n     const { results } = await getEpisodes();\n     setEpisodes(results)\n    }\n\n    getPersons() && setLoading(false);\n  }, []);\n\n  // console.log(episodes)\n\n  function listConditinal() {\n    if(loading || !episodes) {\n      return <p>Carregando...</p>\n    } return (\n      <ul>\n      {\n        episodes.map((item, index) => <li key={index}> \n          <p>{item.name}</p> \n          <p>Date: {item.air_date} </p>\n          <p>Episódio: {item.episode}</p>\n          </li>)\n      }\n    </ul>\n    );\n  }\n\n  return (\n    <div className=\"episodes\">\n      <Nav />\n      <h1>Episódios</h1>\n      <p>Em construção...</p>\n      { listConditinal() }\n    </div>\n  );\n}\n\nexport default Episode;"]},"metadata":{},"sourceType":"module"}