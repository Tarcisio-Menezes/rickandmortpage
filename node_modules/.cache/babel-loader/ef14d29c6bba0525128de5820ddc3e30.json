{"ast":null,"code":"var _jsxFileName = \"/home/tarcisio/pages/rickandmort/src/pages/Episode.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Form } from 'react-bootstrap';\nimport Nav from '../components/Nav';\nimport '../css/Episode.css';\nimport { getEpisodes, getSearchEpisodes, getSearchEpisodeId } from '../services/SearchAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Episode() {\n  _s();\n\n  const [episodes, setEpisodes] = useState([]);\n  const [newEpisodes, setNewEpisodes] = useState([]);\n  const [newEpisodeId, setNewEpisodeId] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const getEpisode = async () => {\n      const results = await getEpisodes();\n      setEpisodes(results);\n    };\n\n    getEpisode() && setLoading(false);\n  }, []);\n  useEffect(() => {\n    const getSearchPerson = async searchName => {\n      const results = await getSearchEpisodes(newEpisodes);\n      setEpisodes(results);\n    };\n\n    getSearchPerson() && setLoading(false);\n  }, [newEpisodes, setNewEpisodes]);\n  useEffect(() => {\n    const getSearchPersonID = async id => {\n      const results = await getSearchEpisodeId(newEpisodeId);\n      setEpisodes(results);\n      console.log(results);\n      console.log(newEpisodeId);\n    };\n\n    getSearchPersonID() && setLoading(false);\n  }, [newEpisodeId, setNewEpisodeId]); // console.log(episodes)\n\n  function listConditinal() {\n    if (loading || !episodes) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: episodes.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.nome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Data de estreia: \", item.dataEstreia.substring(10, 0), \" - temporada \", item.temporadaId, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Descri\\xE7\\xE3o: \", item.descricao]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sinopse: \", item.sinopse]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 39\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"episodes\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Epis\\xF3dios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Pesquise pelo nome ou n\\xFAmero do epis\\xF3dio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Nome ou n\\xFAmero do epis\\xF3dio\",\n        onChange: e => typeof e.target.value != 'string' ? setNewEpisodes(e.target.value.toLowerCase()) : setNewEpisodeId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), listConditinal()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Episode, \"cFExF6U5euiM1h402uk7cI1e7hs=\");\n\n_c = Episode;\nexport default Episode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"sources":["/home/tarcisio/pages/rickandmort/src/pages/Episode.js"],"names":["React","useEffect","useState","Form","Nav","getEpisodes","getSearchEpisodes","getSearchEpisodeId","Episode","episodes","setEpisodes","newEpisodes","setNewEpisodes","newEpisodeId","setNewEpisodeId","loading","setLoading","getEpisode","results","getSearchPerson","searchName","getSearchPersonID","id","console","log","listConditinal","map","item","index","nome","dataEstreia","substring","temporadaId","descricao","sinopse","e","target","value","toLowerCase"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Form } from 'react-bootstrap';\nimport Nav from '../components/Nav';\nimport '../css/Episode.css';\nimport { getEpisodes, getSearchEpisodes, getSearchEpisodeId } from '../services/SearchAPI';\n\nfunction Episode() {\n\n  const [episodes, setEpisodes] = useState([]);\n  const [newEpisodes, setNewEpisodes] = useState([]);\n  const [newEpisodeId, setNewEpisodeId] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getEpisode = async () => {\n     const results = await getEpisodes();\n     setEpisodes(results)\n    }\n\n\n    getEpisode() && setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    const getSearchPerson = async (searchName) => {\n     const results = await getSearchEpisodes(newEpisodes);\n     setEpisodes(results)\n    }\n\n    getSearchPerson() && setLoading(false);\n  }, [newEpisodes, setNewEpisodes]);\n\n  useEffect(() => {\n    const getSearchPersonID = async (id) => {\n     const results = await getSearchEpisodeId(newEpisodeId);\n     setEpisodes(results)\n     console.log(results);\n     console.log(newEpisodeId);\n    }\n\n    getSearchPersonID() && setLoading(false);\n  }, [newEpisodeId, setNewEpisodeId]);\n\n  // console.log(episodes)\n\n  function listConditinal() {\n    if(loading || !episodes) {\n      return <p>Carregando...</p>\n    } return (\n      <ul>\n      {\n        episodes.map((item, index) => <li key={index}> \n          <p>{item.nome}</p> \n          <p>Data de estreia: {item.dataEstreia.substring(10, 0)} - temporada {item.temporadaId} </p>\n          <p>Descrição: {item.descricao}</p>\n          <p>Sinopse: {item.sinopse}</p>\n          </li>)\n      }\n    </ul>\n    );\n  }\n\n  return (\n    <div className=\"episodes\">\n      <Nav />\n      <h1>Episódios</h1>\n      <section className=\"inputs\">\n             <h3> Pesquise pelo nome ou número do episódio:</h3>\n             <Form.Control\n              type=\"text\"\n              placeholder=\"Nome ou número do episódio\"\n              onChange={ \n                (e) => typeof (e.target.value) != 'string' ? \n                  setNewEpisodes((e.target.value).toLowerCase()) :\n                  setNewEpisodeId(e.target.value) \n              }\n             />\n        </section>\n      { listConditinal() }\n    </div>\n  );\n}\n\nexport default Episode;"]},"metadata":{},"sourceType":"module"}