{"ast":null,"code":"import React,{useContext}from'react';import{Form,FloatingLabel}from'react-bootstrap';import MainContext from'../context/MainContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Inputs(){var _useContext=useContext(MainContext),setNewPersons=_useContext.setNewPersons,setSearchName=_useContext.setSearchName,searchName=_useContext.searchName,setSearchStatus=_useContext.setSearchStatus,searchStatus=_useContext.searchStatus;return/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\" Explorar aleatoriamente por p\\xE1gina:\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"number\",placeholder:\"N\\xFAmero da p\\xE1gina\",onChange:function onChange(e){return setNewPersons(e.target.value);},min:\"1\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Pesquisa combinada\"}),/*#__PURE__*/_jsxs(\"section\",{className:\"inputs\",children:[/*#__PURE__*/_jsx(\"p\",{children:\" Pesquise por nome e diga se o personagem est\\xE1 vivo ou morto\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Nome do personagem\",onChange:function onChange(e){return setSearchName(e.target.value.toLowerCase());}}),/*#__PURE__*/_jsxs(FloatingLabel,{controlId:\"floatingSelect\",children:[/*#__PURE__*/_jsxs(Form.Select,{\"aria-label\":\"alive, dead or unknow\",onChange:function onChange(e){return setSearchStatus(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"option\",{value:\"alive\",children:\" Alive \"}),/*#__PURE__*/_jsx(\"option\",{value:\"dead\",children:\" Dead \"}),/*#__PURE__*/_jsx(\"option\",{value:\"unknow\",children:\" Unknow \"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[searchName.toUpperCase(),\" \",searchStatus.toUpperCase()]})]})]})]});}export default Inputs;","map":{"version":3,"sources":["/home/tarcisio/pages/rickandmort/src/components/Inputs.js"],"names":["React","useContext","Form","FloatingLabel","MainContext","Inputs","setNewPersons","setSearchName","searchName","setSearchStatus","searchStatus","e","target","value","toLowerCase","toUpperCase"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,IAAT,CAAeC,aAAf,KAAoC,iBAApC,CACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,C,wFAEA,QAASC,CAAAA,MAAT,EAAkB,CAChB,gBACgDJ,UAAU,CAACG,WAAD,CAD1D,CAAQE,aAAR,aAAQA,aAAR,CAAuBC,aAAvB,aAAuBA,aAAvB,CACEC,UADF,aACEA,UADF,CACcC,eADd,aACcA,eADd,CAC+BC,YAD/B,aAC+BA,YAD/B,CAEA,mBACE,wCACI,8DADJ,cAEI,KAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,QADP,CAEE,WAAW,CAAC,wBAFd,CAGE,QAAQ,CAAG,kBAACC,CAAD,QAAOL,CAAAA,aAAa,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAApB,EAHb,CAIE,GAAG,CAAC,GAJN,EAFJ,cAQI,0CARJ,cASI,iBAAS,SAAS,CAAC,QAAnB,wBACK,sFADL,cAEK,KAAC,IAAD,CAAM,OAAN,EACC,IAAI,CAAC,MADN,CAEC,WAAW,CAAC,oBAFb,CAGC,QAAQ,CAAG,kBAACF,CAAD,QAAOJ,CAAAA,aAAa,CAAEI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAiBC,WAAjB,EAAD,CAApB,EAHZ,EAFL,cAOI,MAAC,aAAD,EAAe,SAAS,CAAC,gBAAzB,wBACE,MAAC,IAAD,CAAM,MAAN,EACE,aAAW,uBADb,CAEE,QAAQ,CAAG,kBAACH,CAAD,QAAOF,CAAAA,eAAe,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtB,EAFb,wBAIA,kCAJA,cAKA,eAAQ,KAAK,CAAC,OAAd,qBALA,cAMA,eAAQ,KAAK,CAAC,MAAd,oBANA,cAOA,eAAQ,KAAK,CAAC,QAAd,sBAPA,GADF,cAUA,qBAAKL,UAAU,CAACO,WAAX,EAAL,KAAkCL,YAAY,CAACK,WAAb,EAAlC,GAVA,GAPJ,GATJ,GADF,CAgCD,CAED,cAAeV,CAAAA,MAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Form, FloatingLabel } from 'react-bootstrap';\nimport MainContext from '../context/MainContext';\n\nfunction Inputs() {\n  const { setNewPersons, setSearchName, \n    searchName, setSearchStatus, searchStatus } = useContext(MainContext);\n  return (\n    <section>\n        <p> Explorar aleatoriamente por página:</p>\n        <Form.Control\n          type=\"number\"\n          placeholder=\"Número da página\" \n          onChange={ (e) => setNewPersons(e.target.value) }\n          min=\"1\"\n        />\n        <h3>Pesquisa combinada</h3>\n        <section className=\"inputs\">\n             <p> Pesquise por nome e diga se o personagem está vivo ou morto</p>\n             <Form.Control\n              type=\"text\"\n              placeholder=\"Nome do personagem\"\n              onChange={ (e) => setSearchName((e.target.value).toLowerCase()) }\n             />\n            <FloatingLabel controlId=\"floatingSelect\">\n              <Form.Select\n                aria-label=\"alive, dead or unknow\"\n                onChange={ (e) => setSearchStatus(e.target.value) }\n              >\n              <option>Status</option>\n              <option value=\"alive\"> Alive </option>\n              <option value=\"dead\"> Dead </option>\n              <option value=\"unknow\"> Unknow </option>\n            </Form.Select>\n            <p>{ searchName.toUpperCase() } { searchStatus.toUpperCase() }</p>\n          </FloatingLabel>\n        </section>\n    </section>\n  );\n}\n\nexport default Inputs;\n"]},"metadata":{},"sourceType":"module"}