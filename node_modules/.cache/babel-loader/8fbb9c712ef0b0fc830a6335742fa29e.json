{"ast":null,"code":"var _jsxFileName = \"/home/tarcisio/pages/rickandmort/src/pages/Episode.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, Form, Container, Row, Col } from 'react-bootstrap';\nimport Nave from '../components/Nave';\nimport '../css/Episode.css';\nimport { getEpisodes, getSearchEpisodes } from '../services/SearchAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Episode() {\n  _s();\n\n  const [episodes, setEpisodes] = useState([]);\n  const [newEpisodes, setNewEpisodes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const getEpisode = async () => {\n      const results = await getEpisodes();\n      setEpisodes(results);\n    };\n\n    getEpisode() && setLoading(false);\n  }, []);\n  useEffect(() => {\n    const getSearchPerson = async searchName => {\n      const results = await getSearchEpisodes(newEpisodes);\n      setEpisodes(results);\n    };\n\n    getSearchPerson() && setLoading(false);\n  }, [newEpisodes]); // console.log(episodes)\n\n  function listConditinal() {\n    if (loading || !episodes) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: episodes.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '15rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: item.nome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"mb-2 text-muted\",\n              children: [\"Data de estreia: \", item.dataEstreia.substring(10, 0), \" Temporada \", item.temporadaId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.descricao\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Sinopse: \", item.sinopse]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 39\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"episodes\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Nave, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Epis\\xF3dios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Pesquise pelo nome do epis\\xF3dio:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Nome do epis\\xF3dio\",\n          onChange: e => setNewEpisodes(e.target.value.toLowerCase())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), listConditinal()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Episode, \"l+3uYNNaoOXqLBVdhW58HfC3CS8=\");\n\n_c = Episode;\nexport default Episode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"sources":["/home/tarcisio/pages/rickandmort/src/pages/Episode.js"],"names":["React","useEffect","useState","Card","Form","Container","Row","Col","Nave","getEpisodes","getSearchEpisodes","Episode","episodes","setEpisodes","newEpisodes","setNewEpisodes","loading","setLoading","getEpisode","results","getSearchPerson","searchName","listConditinal","map","item","index","width","nome","dataEstreia","substring","temporadaId","descricao","sinopse","e","target","value","toLowerCase"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, Form, Container, Row, Col } from 'react-bootstrap';\nimport Nave from '../components/Nave';\nimport '../css/Episode.css';\nimport { getEpisodes, getSearchEpisodes } from '../services/SearchAPI';\n\nfunction Episode() {\n\n  const [episodes, setEpisodes] = useState([]);\n  const [newEpisodes, setNewEpisodes] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getEpisode = async () => {\n     const results = await getEpisodes();\n     setEpisodes(results)\n    }\n\n    getEpisode() && setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    const getSearchPerson = async (searchName) => {\n     const results = await getSearchEpisodes(newEpisodes);\n     setEpisodes(results)\n    }\n\n    getSearchPerson() && setLoading(false);\n  }, [newEpisodes]);\n\n  // console.log(episodes)\n\n  function listConditinal() {\n    if(loading || !episodes) {\n      return <p>Carregando...</p>\n    } return (\n      <ul>\n      {\n        episodes.map((item, index) => <li key={index}>\n          <Card style={{ width: '15rem' }}>\n            <Card.Body>\n              <Card.Title>{item.nome}</Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                Data de estreia: {item.dataEstreia.substring(10, 0)} Temporada {item.temporadaId}\n              </Card.Subtitle>\n              <Card.Text>\n                <p>{ item.descricao }</p>\n                <p>Sinopse: { item.sinopse }</p>\n              </Card.Text>\n            </Card.Body>\n          </Card>\n       </li>)\n      }\n    </ul>\n    );\n  }\n\n  return (\n    <div className=\"episodes\">\n      <Container>\n        <Row>\n          <Col><Nave /></Col>\n        </Row>\n          <h1>Episódios</h1>\n          <section className=\"inputs\">\n            <h3> Pesquise pelo nome do episódio:</h3>\n            <Form.Control\n            type=\"text\"\n            placeholder=\"Nome do episódio\"\n            onChange={ (e) => setNewEpisodes((e.target.value).toLowerCase()) }\n            />\n          </section>\n          { listConditinal() }\n      </Container>\n    </div>\n  );\n}\n\nexport default Episode;"]},"metadata":{},"sourceType":"module"}