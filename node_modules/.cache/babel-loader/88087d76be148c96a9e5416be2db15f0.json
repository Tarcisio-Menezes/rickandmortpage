{"ast":null,"code":"var _jsxFileName = \"/home/tarcisio/pages/rickandmort/src/context/Provider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport MainContext from './MainContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Provider = ({\n  children\n}) => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [searchName, setSearchName] = useState('');\n  const context = {\n    persons,\n    setPersons,\n    searchName,\n    setSearchName\n  };\n  return /*#__PURE__*/_jsxDEV(MainContext.Provider, {\n    value: context,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Provider, \"SGhIQMnM5TWM3j/RS+dwZglVJcc=\");\n\n_c = Provider;\nexport default Provider;\nProvider.propTypes = {\n  children: PropTypes.array\n}.isRequired;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"sources":["/home/tarcisio/pages/rickandmort/src/context/Provider.js"],"names":["React","useState","PropTypes","MainContext","Provider","children","persons","setPersons","searchName","setSearchName","context","propTypes","array","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAMS,OAAO,GAAG;AACdJ,IAAAA,OADc;AAEdC,IAAAA,UAFc;AAGdC,IAAAA,UAHc;AAIdC,IAAAA;AAJc,GAAhB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAGC,OAA9B;AAAA,cACGL;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhBD;;GAAMD,Q;;KAAAA,Q;AAkBN,eAAeA,QAAf;AAEAA,QAAQ,CAACO,SAAT,GAAqB;AACnBN,EAAAA,QAAQ,EAAEH,SAAS,CAACU;AADD,EAEnBC,UAFF","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport MainContext from './MainContext';\n\nconst Provider = ({ children }) => {\n  const [persons, setPersons] = useState([]);\n  const [searchName, setSearchName] = useState('');\n\n  const context = {\n    persons,\n    setPersons,\n    searchName,\n    setSearchName,\n  };\n\n  return (\n    <MainContext.Provider value={ context }>\n      {children}\n    </MainContext.Provider>\n  );\n};\n\nexport default Provider;\n\nProvider.propTypes = {\n  children: PropTypes.array,\n}.isRequired;\n"]},"metadata":{},"sourceType":"module"}