{"ast":null,"code":"var _jsxFileName = \"/home/tarcisio/pages/rickandmort/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Card } from 'react-bootstrap';\nimport Nav from '../components/Nav';\nimport MainContext from '../context/MainContext';\nimport { getNamePersons, getNewPersons, getPersons } from '../services/SearchAPI';\nimport '../css/Home.css';\nimport Inputs from '../components/Inputs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const {\n    persons,\n    setPersons,\n    newPersons,\n    searchName,\n    searchStatus\n  } = useContext(MainContext);\n  useEffect(() => {\n    async function getCharacter() {\n      const {\n        results\n      } = await getPersons();\n      setPersons(results);\n    }\n\n    getCharacter() && setLoading(false);\n  }, []); // console.log(persons);\n\n  useEffect(() => {\n    async function getNewCharacter() {\n      const {\n        results\n      } = await getNewPersons(newPersons);\n      setPersons(results);\n    }\n\n    getNewCharacter() && setLoading(false);\n  }, [newPersons]);\n  useEffect(() => {\n    async function getNameCharacter() {\n      const {\n        results\n      } = await getNamePersons(searchName, searchStatus);\n      setPersons(results);\n    }\n\n    getNameCharacter() && setLoading(false);\n  }, [searchName, searchStatus]);\n\n  function listConditinal() {\n    if (loading || !persons) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: persons.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '20rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: item.image,\n            alt: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Esp\\xE9cie: \", item.species, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Status: \", item.status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Localiza\\xE7\\xE3o: \", item.location.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 40\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bem vindo ao Rick and Morty f\\xE3 page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Voc\\xEA pode explorar mais personagens alterando os filtros!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Inputs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), listConditinal()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"BsjlWRipuDxXp82Aq25PA6O8AVg=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/tarcisio/pages/rickandmort/src/pages/Home.js"],"names":["React","useEffect","useState","useContext","Card","Nav","MainContext","getNamePersons","getNewPersons","getPersons","Inputs","Home","loading","setLoading","persons","setPersons","newPersons","searchName","searchStatus","getCharacter","results","getNewCharacter","getNameCharacter","listConditinal","map","item","index","width","image","name","species","status","location"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { Card } from 'react-bootstrap';\nimport Nav from '../components/Nav';\nimport MainContext from '../context/MainContext';\nimport { getNamePersons, getNewPersons, getPersons } from '../services/SearchAPI';\nimport '../css/Home.css';\nimport Inputs from '../components/Inputs';\n\nfunction Home() {\n  const [loading, setLoading] = useState(true);\n  const { \n    persons,\n    setPersons,\n    newPersons,\n    searchName,\n    searchStatus,\n    } = useContext(MainContext);\n\n  useEffect(() => {\n    async function getCharacter() {\n      const { results } = await getPersons();\n      setPersons(results);\n    }\n  \n    getCharacter() && setLoading(false);\n  }, []);\n\n  // console.log(persons);\n\n  useEffect(() => {\n    async function getNewCharacter() {\n      const { results } = await getNewPersons(newPersons);\n      setPersons(results);\n    }\n    getNewCharacter() && setLoading(false);\n  }, [newPersons]);\n\n  useEffect(() => {\n    async function getNameCharacter() {\n      const { results } = await getNamePersons(searchName, searchStatus);\n      setPersons(results);\n    }\n    getNameCharacter() && setLoading(false);\n  }, [searchName, searchStatus]);\n\n  function listConditinal() {\n    if(loading || !persons) {\n      return <p>Carregando...</p>\n    } return (\n      <ul>\n      {\n          persons.map((item, index) => <li key={index}>\n            <Card style={{ width: '20rem' }}>\n              <Card.Img variant=\"top\" src={item.image} alt={item.name} />\n              <Card.Body>\n              <Card.Title>{item.name}</Card.Title>\n              <Card.Text>\n                <p>Espécie: {item.species} </p>\n                <p>Status: {item.status}</p>\n                <p>Localização: {item.location.name}</p> \n              </Card.Text>\n            </Card.Body>\n           </Card>\n     </li>)\n      }\n    </ul>\n    );\n  }\n\n  return (\n    <div>\n     <Nav />\n      <h1>Bem vindo ao Rick and Morty fã page</h1>\n      <h3> Você pode explorar mais personagens alterando os filtros!</h3>\n      <Inputs />\n      { listConditinal() }\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}